## If false, zookeeper will not be installed
##
enabled: false 
## Total replica count equals to the total node required to deploy pods
##
replicas: 3
##
##
name: zookeeper
## Image information
##
image:
  repository: confluentinc/cp-zookeeper-operator
  tag: 6.1.0.0
## Pod resources requests and limits
##
resources:
  ## It is recommended to set both resource requests and limits.
  ## If not configured, kubernetes will set cpu/memory defaults.
  ## Reference: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  requests:
    cpu: 500m
    memory: 4Gi
  limits: {}

## User can set storageClassName to provide a user-created storage class. This setting at component-level takes precedence over the global-level.
## If storageClassName is left blank ("") and global.provider.storage is empty, the default storage class will be used.
## If storageClassName is left blank ("") and global.provider.storage is not empty, storage classes will be created
## and used, one per availability zone.
storageClassName: ""

## Volume size
## Don't change the sequence
volume:
  data: 10Gi
  txnlog: 10Gi
## JVM configuration
##
jvmConfig:
  heapSize: 4G
tls:
  ## JMX/Jolokia TLS enabled
  ##
  jmxTLS: false
  ## JMX/Jolokia type of client authentication, tls for 2waytls
  jmxAuthentication:
    type: ""
  jksPassword: mystorepassword
  cacerts: |-
  fullchain: |-
  privkey: |-
## Pod termination grace-period
##
terminationGracePeriodSeconds: 180
##
## Configuration override supports configuration updates for server/jvm parameters.
## Only cluster-wide configuration are supported and some of the configuration are blacklisted which cannot be override.
## In most of the use-case, this feature is not required.
##
## More information can be found at the official document.
##
configOverrides:
  server: []
  jvm: []
  log4j: []
##
## Inject pod-level annotations
## The value must be type string, please use quotes for boolean/numbers
## Any changes on this field will trigger rolling restart
##
podAnnotations: {}
#podAnnotations:
#  string: "value"
#  number: "1"
#  boolean: "true"
#  list: "[{\"labels\": {\"key\": \"value\"}},{\"key1\": \"value1\"}]"

## Pod distribution on nodes with given key and values
## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## All forms of affinity default to use preferredDuringSchedulingIgnoredDuringExecution
affinity:
  nodeAffinity: {}
  # nodeAffinity:
  #   key: components
  #   values:
  #   - zookeeper
  #   - app
  #   rule: PREFERRED
  podAffinity: {}
  # podAffinity:
  #   rule: PREFERRED
  #   terms:
  #   - key: kafka
  #     values:
  #     - zookeeper
  #     - app
  #     namespaces:
  #     - ns1
  #     topologyKey:
  #       key: kubernetes.io/hostname (optional, kubernetes.io/hostname is the default if not key is provided)
  #     weight:
  #       weight: 100 (optional, valid 1-100)
  podAntiAffinity: {}
  # podAntiAffinity:
  #   rule: PREFERRED
  #   terms:
  #   - key: kafka
  #     values:
  #     - zookeeper
  #     - app
  #     namespaces:
  #     - ns1
  #     topologyKey:
  #       key: kubernetes.io/hostname (optional, kubernetes.io/hostname is the default if not key is provided)
  #     weight:
  #       weight: 100 (optional, valid 1-100)

## Deprecation Warning! Please use affinity.nodeAffinity instead
## The node Affinity configuration uses preferredDuringSchedulingIgnoredDuringExecution
nodeAffinity : {}
#nodeAffinity:
#  key: components
#  values:
#  - zookeeper
#  - app

## Deprecation Warning! Please use affinity.podAntiAffinity instead
## Pod Anti-Affinity
## It uses preferredDuringSchedulingIgnoredDuringExecution
## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#interlude-built-in-node-labels
## Use this capability, if the cluster has a concept of racks
rack: {}
#rack:
# topology: kubernetes.io/hostname

## ensure zookeeper pods in this cluster are distributed across different kubernetes nodes
oneReplicaPerNode: true

## Deprecation Warning! Please use oneReplicaPerNode instead
## Disable HostPort
## This is mechanism to isolate pods of same type running on the same node through port mapping on the host.
## If this feature is true, make sure to use nodeAffinity and rack to distribute pod across nodes.
## Take precaution before enabling it for the Zookeeper cluster
disableHostPort: true

## https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets
mountedSecrets: []
#mountedSecrets:
## [Required]
# - secretRef: my-secret
## [Optional]
#   keyItems:
#   // secret is stored under /mnt/secrets/my-secret/my-group/my-username file instead of /mnt/secrets/my-secret/username
#   // if provided, only secret keys in items will be mounted. Otherwise, all keys will be mounted.
## [Required]
#   - key: username
#     path: my-group/my-username

## Configure service account for cluster
## If left blank, will use default kubernetes serviceaccount
serviceAccountName: ""
